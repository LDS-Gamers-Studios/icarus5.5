name: Send to Steph
on:
  workflow_dispatch:
  push:
    branches: toPrivateRickAndSteph
jobs:
  update:
    name: SendToSteph
    runs-on: ubuntu-latest
    steps:
    - name: Merge to Steph
      run: |
        # This is where the magic happens
        date
        echo Configuring
        #${{ github.actor }}:${{ secrets.GITHUB_TOKEN }}@
        #${{ secrets.GHTOKEN }}@
        git config --global user.email "${{ secrets.EMAIL }}"
        git config --global user.name "upstreamPuller"

        echo Cloning Steph
        git clone "https://${{ secrets.GHTOKEN }}@github.com/j-romchain/Steph.git"
        echo CDing
        cd Steph
          
        echo Adding Self as upstream
        git remote add upstream https://github.com/j-romchain/icarus5.5.git
      
        echo Fetching Self
        git fetch upstream
      
        echo TryMerge
        git merge --no-commit upstream/toPrivateRickAndSteph 2>&1
        # and recording the output for in a moment
        merge_result=$(git merge --no-commit upstream/toPrivateRickAndSteph 2>&1) # Use upstream/toPrivateRickAndSteph
        
        echo Results...
        if [[ "$merge_result" =~ "Automatic merge failed" || "$merge_result" =~ "CONFLICT" ]]; then
          echo "Conflicts detected during simulated merge with upstream toPrivateRickAndSteph."
          echo "$merge_result" # Print the merge result (including conflicts)
          echo "Performing action for conflicts..."
          # I would potentially email the owner or something here
          # Create a pull request (more complex, requires GitHub API)
          
        elif [[ "$merge_result" =~ "Already up to date" ]]; then
          echo "No upstream changes detected, this was all useless."
          echo "If someone wants to make this eventuality not happen, perhaps let workflows run when an update to another repository happens."
          
        else
          echo "No conflicts detected during sim. Actually merging..."
          git merge upstream/toPrivateRickAndSteph || { echo "Error: Merge failed."; exit 1; }
          git commit -m "Merged from icarus5.5 on "$(date) || { echo "Error: Commit failed."; exit 1; }
          git push origin main || { echo "Error: Push failed."; exit 1; } # Push to your repo
      
          echo "Performing action for no conflicts..."
          # Example: Run tests (replace with your desired command)
          # I would potentially build and release here, but thats hard.
          # ...
      
        fi
